apiVersion: apps/v1
kind: Deployment
metadata:
  name: db-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: db
  template:
    metadata:
      labels:
        app: db
    spec:
      containers:
      - name: db
        image: himanshu701/hadiya:mysql
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: rootpassword
        volumeMounts:
        - name: db-storage
          mountPath: /var/lib/mysql
      volumes:
      - name: db-storage
        persistentVolumeClaim:
          claimName: db-pvc


apiVersion: v1
kind: Service
metadata:
  name: db-service
spec:
  ports:
    - port: 3306
      targetPort: 3306
  selector:
    app: db


# db-pv.yaml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: db-pv
spec:
  accessModes:
    - ReadWriteOnce
  capacity:
    storage: 1Gi
  hostPath:
    path: /data/db

# db-pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: db-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
      - name: backend
        image: himanshu701/hadiya:back1
        ports:
        - containerPort: 3000

apiVersion: v1
kind: Service
metadata:
  name: backend-service
spec:
  ports:
    - port: 8080
      targetPort: 3000
  selector:
    app: backend

apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
      - name: frontend
        image: himanshu701/hadiya:front1
        ports:
        - containerPort: 80


apiVersion: v1
kind: Service
metadata:
  name: frontend-service
spec:
  ports:
    - port: 80
      targetPort: 80
  selector:
    app: frontend
  type: NodePort
